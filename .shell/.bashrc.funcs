#!/bin/bash

# launch_vim () {
# 	# restore cursor to blinking line on vim exit
# 	/usr/local/bin/vim "$@"
# 	# echo -e -n "\x1b[\x35 q" # changes to blinking bar
# 	echo -e -n "\x1b[\x31 q" # changes to blinking block
#
# }
# alias vim=launch_vim

lodash() {
  lynx "http://lodash.com/docs/#$1"
}

cd_func () {
  local x2 the_new_dir adir index
  local -i cnt

  if [[ $1 ==  "--" ]]; then
    dirs -v
    return 0
  fi

  the_new_dir=$1
  [[ -z $1 ]] && the_new_dir=$HOME

  if [[ ${the_new_dir:0:1} == '-' ]]; then
    #
    # Extract dir N from dirs
    index=${the_new_dir:1}
    [[ -z $index ]] && index=1
    adir=$(dirs +$index)
    [[ -z $adir ]] && return 1
    the_new_dir=$adir
  fi

  # '~' has to be substituted by ${HOME}
  [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir="${HOME}${the_new_dir:1}"

  # Now change to the new dir and add to the top of the stack
  pushd "${the_new_dir}" > /dev/null && LC_COLLATE=C ls -alh --color=auto
  [[ $? -ne 0 ]] && return 1
  the_new_dir=$(pwd)

  # Trim down everything beyond 11th entry
  popd -n +11 2>/dev/null 1>/dev/null
  #
  # Remove any other occurence of this dir, skipping the top of the stack
  for ((cnt=1; cnt <= 10; cnt++)); do
    x2=$(dirs +${cnt} 2>/dev/null)
    [[ $? -ne 0 ]] && return 0
    [[ ${x2:0:1} == '~' ]] && x2="${HOME}${x2:1}"
    if [[ "${x2}" == "${the_new_dir}" ]]; then
      popd -n +$cnt 2>/dev/null 1>/dev/null
      cnt=cnt-1
    fi
  done

  return 0
}

function nvm-upgrade() {
	nvm install $1 --reinstall-packages-from=`nvm version`
	nvm use $1
	npm install -g npm
	npm upgrade -g
}

# _script="$(readlink --canonicalize-existing "$0")"

_script="${BASH_SOURCE:-$0}"
_script=$(readlink --canonicalize-existing $_script)
_file_success $_script
