# shortcut summary
# <Prefix> <Tab>       extracts urls/hashes/files and inserts into command line
# <Prefix> Ctrl-f      highlight file
# <Prefix> Ctrl-u      highlight url
# <Prefix> Ctrl-d      highlight number
# <Prefix> u           extract urls to fzf
# <Prefix> F           open tmux-fzf

# the plugin manager (tpm): prefix + I to install, prefix + U to update, prefix + alt-U to clean
# set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux"
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection 'clipboard' # primary, 'secondary' or 'clipboard'
# Y (shift-y) — "put" selection. Equivalent to copying a selection, and pasting it to the command line
set -g @yank_action 'copy-pipe'


# prefix + F  => manage tmux
set -g @plugin 'sainnhe/tmux-fzf'

TMUX_FZF_LAUNCH_KEY="T"
TMUX_FZF_POPUP_HEIGHT="50%"
TMUX_FZF_POPUP_WIDTH="70%"
TMUX_FZF_POPUP=1
# TMUX_FZF_PANE_FORMAT="[#{window_name}] #{pane_current_command}  [#{pane_width}x#{pane_height}] [history #{history_size}/#{history_limit}, #{history_bytes} bytes] #{?pane_active,[active],[inactive]}"
# custom menu item
# TMUX_FZF_MENU=\launch
# "foo\necho 'Hello!'\n"\
# "bar\nls ~\n"\
# "sh\nsh ~/test.sh\n"

set -g @plugin 'woodstok/tmux-butler'
# Meta + i will invoke tmux-butler.
# Meta + p will invoke tmux-butler with paths mode.
# Meta + s will invoke tmux-butler with snippets mode.
# more in the "modes" directory
# bind-key -n M-i run-shell -b "$HOME/.config/tmux/.tmux-butler/modes/quetty-filter -start word"
# bind-key -n M-p run-shell -b "$HOME/.tmux-butler/modes/quetty-filter -start path"
# bind-key -n M-s run-shell -b "$HOME/.tmux-butler/modes/snippets"
unbind-key -n M-i
unbind-key -n M-p
unbind-key -n M-s
bind-key F run-shell -b "$HOME/.config/tmux/plugins/tmux-butler/modes/quetty-filter -start word"


# urls in fzf
# set -g @plugin 'wfxr/tmux-fzf-url'
# set -g @fzf-url-bind 'u'
# simple example for capturing files like 'abc.txt'
# set -g @fzf-url-extra-filter 'grep -oE "\b[a-zA-Z]+\.txt\b"'

# continuous saving and restoration of tmux envionment
set -g @plugin 'tmux-plugins/tmux-resurrect'
#  resurrect neovim sessions
set -g @resurrect-strategy-nvim 'session'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
# set -g @continuum-restore 'off'
# <prefix> ctrl-S/ ctrl-r save/restore

# <Prefix> + Tab to start...
# tab to insert it to the current pane,
# enter to copy it to the clipboard,
# ctrl-o to open the path/url or
# ctrl-e to edit with $EDITOR
# ctrl-f cycle extract options between word, path/url, lines
# ctrl-g cycle extract area between recent, full, window recent, window full, custom
# set -g @extrakto_fzf_tool "/usr/local/bin/fzf --layout=reverse --info=inline --ansi --height=100% --multi --border --preview-window=:hidden  --color=dark,bg+:235,hl+:5,pointer:5 --prompt=∼  --pointer=▶ --marker=✓ --bind Ctrl-/:toggle-preview --bind ctrl-p:up --bind ctrl-n:down --bind ctrl-b:page-up --bind ctrl-f:page-down --bind ctrl-alt-a:toggle-all"
# set -g @extrakto_fzf_tool "fzf"
# # works better for nvim
# set -g @extrakto_split_size "100"
# set -g @extrakto_fzf_tool "fzf --preview 'cat {}'".
# set -g @plugin 'laktak/extrakto'

# @extrakto_key tab The key binding to start. If you have any special requirements (like a custom key table) set this to 'none' and define a binding in your .tmux.conf. See extrakto.tmux for a sample.
# @extrakto_split_direction a Whether the tmux split will be auto, popup, vertical or horizontal
# @extrakto_split_size  7 The size of the tmux split (for vertical/horizontal)
# @extrakto_popup_size  90% Set width and height of the tmux popup window. Set this to w,h to set the width to w and height to h.
# @extrakto_popup_position  C Set position of the tmux popup window. Possible values are in the display-popup entry in man tmux. Set this to x,y to set the x and y positions to x and y respectively.
# @extrakto_grab_area full  Whether you want extrakto to grab data from the recent area, the full pane, all current window's recent areas or all current window's full panes. You can also set this option to any number you want (or number preceded by "window ", e.g. "window 500"), this allows you to grab a smaller amount of data from the pane(s) than the pane's limit. For instance, you may have a really big limit for tmux history but using the same limit may end up on having slow performance on Extrakto.
# @extrakto_clip_tool auto  Set this to whatever clipboard tool you would like extrakto to use to copy data into your clipboard. auto will try to choose the correct clipboard for your platform.
# @extrakto_clip_tool_run bg  Set this to fg to have your clipboard tool run in a foreground shell (enabling copying to clipboard using OSC52).
# @extrakto_fzf_tool  fzf Set this to path of fzf if it can't be found in your PATH.
# @extrakto_fzf_layout  default Control the fzf layout which is "bottom-up" by default. If you prefer "top-down" layout instead set this to reverse. In fact, this value is passed to the fzf --layout parameter. Possible values are: default, reverse and reverse-list
# @extrakto_open_tool auto  Set this to path of your own tool or auto to use your platforms open implementation.
# @extrakto_copy_key  enter Key to copy selection to clipboard.
# @extrakto_insert_key  tab Key to insert selection.
# @extrakto_filter_key  ctrl-f  Key to toggle filter mode.
# @extrakto_grab_key  ctrl-g  Key to toggle grab mode.
# @extrakto_edit_key  ctrl-e  Key to run the editor.
# @extrakto_open_key  ctrl-o  Key to run the open command.

# tmux-open: highlight -> o to open, ctrl+o open in $EDITOR, ctrl+shift+o to search in google
# set -g @open 'x'
# set -g @open-editor 'C-x'
# set -g @plugin 'tmux-plugins/tmux-open'

# tmux-fpp: ($tmux-mode + f) -  use facebook path picker (fpp) to open files
# set -g @plugin 'tmux-plugins/tmux-fpp'

# tmux-copycat: extended sxearching using grep, case-insensitive
set -g @plugin 'tmux-plugins/tmux-copycat'
# foo - searches for string foo
# [0-9]+ - regex search for numbers
# Predefined searches:
#   prefix + ctrl-f - simple file search
#   prefix + ctrl-g - jumping over git status files (best used after git status command)
#   prefix + alt-h - jumping over SHA-1/SHA-256 hashes (best used after git log command)
#   prefix + ctrl-u - url search (http, ftp and git urls)
#   prefix + ctrl-d - number search (mnemonic d, as digit)
#   prefix + alt-i - ip address search
#   These start "copycat mode" and jump to first match.
# "Copycat mode" bindings:
#   These are enabled when you search with copycat:
#   n - jumps to the next match
#   N - jumps to the previous match
#   To copy a highlighted match:
#   Enter - if you're using Tmux vi mode
#   Copying a highlighted match will take you "out" of copycat mode. Paste with prefix + ] (this is Tmux default paste).

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
